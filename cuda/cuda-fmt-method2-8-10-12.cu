// automatically generated by gen_fmt_method2 function
// m = 0, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt0_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 26 ) {
        fmt[0] = coef * LDG(FMT_m_sqrt_pi_2) * sqrt(1.e0/t);
    } else {
      int it;
      double t0, dt, *f;
      double delta = LDG(FMT_m_delta[0]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        dt = t0 - t;
        f  = &FMT_m_table0[it*(10+1)];
        // F0(T)
        fmt[0] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        fmt[0] *= coef;
    }
}

// automatically generated by gen_fmt_method2 function
// m = 1, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt1_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 30 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =        t2 * fmt[0];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[1]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table1[it*(10+1)];
        // F1(T)
        fmt[1] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[0]-F[0]
        fmt[1] *= coef;
        fmt[0] = coef*expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 2, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt2_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 33 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =        t2 * fmt[0];
        fmt[2] = 3.e0 * t2 * fmt[1];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[2]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table2[it*(10+1)];
        // F2(T)
        fmt[2] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[1]-F[0]
        fmt[2] *= coef;
        expt   *= coef;
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 3, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt3_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 36 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =        t2 * fmt[0];
        fmt[2] = 3.e0 * t2 * fmt[1];
        fmt[3] = 5.e0 * t2 * fmt[2];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[3]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table3[it*(10+1)];
        // F3(T)
        fmt[3] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[2]-F[0]
        fmt[3] *= coef;
        expt   *= coef;
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 4, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt4_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 39 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =        t2 * fmt[0];
        fmt[2] = 3.e0 * t2 * fmt[1];
        fmt[3] = 5.e0 * t2 * fmt[2];
        fmt[4] = 7.e0 * t2 * fmt[3];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[4]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table4[it*(10+1)];
        // F4(T)
        fmt[4] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[3]-F[0]
        fmt[4] *= coef;
        expt   *= coef;
        fmt[3] = LDG(FMT_m_dinv2[3])*( expt + t2*fmt[4] );
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 5, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt5_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 41 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =         t2 * fmt[0];
        fmt[2] =  3.e0 * t2 * fmt[1];
        fmt[3] =  5.e0 * t2 * fmt[2];
        fmt[4] =  7.e0 * t2 * fmt[3];
        fmt[5] =  9.e0 * t2 * fmt[4];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[5]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table5[it*(10+1)];
        // F5(T)
        fmt[5] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[4]-F[0]
        fmt[5] *= coef;
        expt   *= coef;
        fmt[4] = LDG(FMT_m_dinv2[4])*( expt + t2*fmt[5] );
        fmt[3] = LDG(FMT_m_dinv2[3])*( expt + t2*fmt[4] );
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 6, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt6_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 43 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =         t2 * fmt[0];
        fmt[2] =  3.e0 * t2 * fmt[1];
        fmt[3] =  5.e0 * t2 * fmt[2];
        fmt[4] =  7.e0 * t2 * fmt[3];
        fmt[5] =  9.e0 * t2 * fmt[4];
        fmt[6] = 11.e0 * t2 * fmt[5];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[6]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table6[it*(10+1)];
        // F6(T)
        fmt[6] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[5]-F[0]
        fmt[6] *= coef;
        expt   *= coef;
        fmt[5] = LDG(FMT_m_dinv2[5])*( expt + t2*fmt[6] );
        fmt[4] = LDG(FMT_m_dinv2[4])*( expt + t2*fmt[5] );
        fmt[3] = LDG(FMT_m_dinv2[3])*( expt + t2*fmt[4] );
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 7, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt7_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 45 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =         t2 * fmt[0];
        fmt[2] =  3.e0 * t2 * fmt[1];
        fmt[3] =  5.e0 * t2 * fmt[2];
        fmt[4] =  7.e0 * t2 * fmt[3];
        fmt[5] =  9.e0 * t2 * fmt[4];
        fmt[6] = 11.e0 * t2 * fmt[5];
        fmt[7] = 13.e0 * t2 * fmt[6];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[7]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table7[it*(10+1)];
        // F7(T)
        fmt[7] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[6]-F[0]
        fmt[7] *= coef;
        expt   *= coef;
        fmt[6] = LDG(FMT_m_dinv2[6])*( expt + t2*fmt[7] );
        fmt[5] = LDG(FMT_m_dinv2[5])*( expt + t2*fmt[6] );
        fmt[4] = LDG(FMT_m_dinv2[4])*( expt + t2*fmt[5] );
        fmt[3] = LDG(FMT_m_dinv2[3])*( expt + t2*fmt[4] );
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

// automatically generated by gen_fmt_method2 function
// m = 8, nexp = 10, eps = 1.0e-12
__device__ void gpu_fmt8_method2( const double t, const double coef, double fmt[] ) {
    if ( t >= 48 ) {
      double t2, sqrt2;
        sqrt2  = sqrt( 0.5e0 / t );
        t2     = sqrt2*sqrt2;
        fmt[0] = coef * LDG(FMT_m_sqrt_pi2) * sqrt2;
        fmt[1] =         t2 * fmt[0];
        fmt[2] =  3.e0 * t2 * fmt[1];
        fmt[3] =  5.e0 * t2 * fmt[2];
        fmt[4] =  7.e0 * t2 * fmt[3];
        fmt[5] =  9.e0 * t2 * fmt[4];
        fmt[6] = 11.e0 * t2 * fmt[5];
        fmt[7] = 13.e0 * t2 * fmt[6];
        fmt[8] = 15.e0 * t2 * fmt[7];
    } else {
      int it;
      double t0, dt, *f, t2, expt;
      double delta = LDG(FMT_m_delta[8]);
      double dhalf = delta * 0.5;
        it = (int)(t*2);
        t0 = delta * (double)it + dhalf;
        t2 = t + t;
        dt = t0 - t;
        f  = &FMT_m_table8[it*(10+1)];
        // F8(T)
        fmt[8] = LDM(f[0]) + dt *( LDM(f[1]) + dt *( LDM(f[2]) + dt *( LDM(f[3]) + dt *
                ( LDM(f[4]) + dt *( LDM(f[5]) + dt *( LDM(f[6]) + dt *( LDM(f[7]) + dt *
                ( LDM(f[8]) + dt * LDM(f[9])))))))));
        // exp(-T)
        expt = 1.e0 + dt*(1.e0 + LDG(FMT_m_dinv[2])*dt*(1.e0 + LDG(FMT_m_dinv[3])*dt
                *(1.e0 + LDG(FMT_m_dinv[4])*dt*(1.e0 + LDG(FMT_m_dinv[5])*dt*(1.e0 + LDG(FMT_m_dinv[6])*dt
                *(1.e0 + LDG(FMT_m_dinv[7])*dt*(1.e0 + LDG(FMT_m_dinv[8])*dt*(1.e0 + LDG(FMT_m_dinv[9])*dt
                *(1.e0 + LDG(FMT_m_dinv[10])*dt)))))))));
        expt *= f[11-1];
        // F[7]-F[0]
        fmt[8] *= coef;
        expt   *= coef;
        fmt[7] = LDG(FMT_m_dinv2[7])*( expt + t2*fmt[8] );
        fmt[6] = LDG(FMT_m_dinv2[6])*( expt + t2*fmt[7] );
        fmt[5] = LDG(FMT_m_dinv2[5])*( expt + t2*fmt[6] );
        fmt[4] = LDG(FMT_m_dinv2[4])*( expt + t2*fmt[5] );
        fmt[3] = LDG(FMT_m_dinv2[3])*( expt + t2*fmt[4] );
        fmt[2] = LDG(FMT_m_dinv2[2])*( expt + t2*fmt[3] );
        fmt[1] = LDG(FMT_m_dinv2[1])*( expt + t2*fmt[2] );
        fmt[0] =            expt + t2*fmt[1];
    }
}

